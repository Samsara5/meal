<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wjw.meal.Dao.EmployeeMapper" >
  <resultMap id="BaseResultMap" type="com.wjw.meal.Pojo.Employee" >
    <id column="eid" property="eid" jdbcType="VARCHAR" />
    <result column="ename" property="ename" jdbcType="VARCHAR" />
    <result column="eroleid" property="eroleid" jdbcType="INTEGER" />
    <result column="eusername" property="eusername" jdbcType="VARCHAR" />
    <result column="epassword" property="epassword" jdbcType="VARCHAR" />
    <result column="esex" property="esex" jdbcType="INTEGER" />
    <result column="ephone" property="ephone" jdbcType="VARCHAR" />
    <result column="estate" property="estate" jdbcType="INTEGER" />
    <result column="deptid" property="deptid" jdbcType="INTEGER" />
    <result column="salary" property="salary" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    eid, ename, eroleid, eusername, epassword, esex, ephone, estate, deptid, salary
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.wjw.meal.Pojo.EmployeeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from re_employee
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from re_employee
    where eid = #{eid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from re_employee
    where eid = #{eid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.wjw.meal.Pojo.EmployeeExample" >
    delete from re_employee
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.wjw.meal.Pojo.Employee" >
    insert into re_employee (eid, ename, eroleid, 
      eusername, epassword, esex, 
      ephone, estate, deptid, 
      salary)
    values (#{eid,jdbcType=VARCHAR}, #{ename,jdbcType=VARCHAR}, #{eroleid,jdbcType=INTEGER}, 
      #{eusername,jdbcType=VARCHAR}, #{epassword,jdbcType=VARCHAR}, #{esex,jdbcType=INTEGER}, 
      #{ephone,jdbcType=VARCHAR}, #{estate,jdbcType=INTEGER}, #{deptid,jdbcType=INTEGER}, 
      #{salary,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.wjw.meal.Pojo.Employee" >
    insert into re_employee
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="eid != null" >
        eid,
      </if>
      <if test="ename != null" >
        ename,
      </if>
      <if test="eroleid != null" >
        eroleid,
      </if>
      <if test="eusername != null" >
        eusername,
      </if>
      <if test="epassword != null" >
        epassword,
      </if>
      <if test="esex != null" >
        esex,
      </if>
      <if test="ephone != null" >
        ephone,
      </if>
      <if test="estate != null" >
        estate,
      </if>
      <if test="deptid != null" >
        deptid,
      </if>
      <if test="salary != null" >
        salary,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="eid != null" >
        #{eid,jdbcType=VARCHAR},
      </if>
      <if test="ename != null" >
        #{ename,jdbcType=VARCHAR},
      </if>
      <if test="eroleid != null" >
        #{eroleid,jdbcType=INTEGER},
      </if>
      <if test="eusername != null" >
        #{eusername,jdbcType=VARCHAR},
      </if>
      <if test="epassword != null" >
        #{epassword,jdbcType=VARCHAR},
      </if>
      <if test="esex != null" >
        #{esex,jdbcType=INTEGER},
      </if>
      <if test="ephone != null" >
        #{ephone,jdbcType=VARCHAR},
      </if>
      <if test="estate != null" >
        #{estate,jdbcType=INTEGER},
      </if>
      <if test="deptid != null" >
        #{deptid,jdbcType=INTEGER},
      </if>
      <if test="salary != null" >
        #{salary,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.wjw.meal.Pojo.EmployeeExample" resultType="java.lang.Integer" >
    select count(*) from re_employee
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update re_employee
    <set >
      <if test="record.eid != null" >
        eid = #{record.eid,jdbcType=VARCHAR},
      </if>
      <if test="record.ename != null" >
        ename = #{record.ename,jdbcType=VARCHAR},
      </if>
      <if test="record.eroleid != null" >
        eroleid = #{record.eroleid,jdbcType=INTEGER},
      </if>
      <if test="record.eusername != null" >
        eusername = #{record.eusername,jdbcType=VARCHAR},
      </if>
      <if test="record.epassword != null" >
        epassword = #{record.epassword,jdbcType=VARCHAR},
      </if>
      <if test="record.esex != null" >
        esex = #{record.esex,jdbcType=INTEGER},
      </if>
      <if test="record.ephone != null" >
        ephone = #{record.ephone,jdbcType=VARCHAR},
      </if>
      <if test="record.estate != null" >
        estate = #{record.estate,jdbcType=INTEGER},
      </if>
      <if test="record.deptid != null" >
        deptid = #{record.deptid,jdbcType=INTEGER},
      </if>
      <if test="record.salary != null" >
        salary = #{record.salary,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update re_employee
    set eid = #{record.eid,jdbcType=VARCHAR},
      ename = #{record.ename,jdbcType=VARCHAR},
      eroleid = #{record.eroleid,jdbcType=INTEGER},
      eusername = #{record.eusername,jdbcType=VARCHAR},
      epassword = #{record.epassword,jdbcType=VARCHAR},
      esex = #{record.esex,jdbcType=INTEGER},
      ephone = #{record.ephone,jdbcType=VARCHAR},
      estate = #{record.estate,jdbcType=INTEGER},
      deptid = #{record.deptid,jdbcType=INTEGER},
      salary = #{record.salary,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.wjw.meal.Pojo.Employee" >
    update re_employee
    <set >
      <if test="ename != null" >
        ename = #{ename,jdbcType=VARCHAR},
      </if>
      <if test="eroleid != null" >
        eroleid = #{eroleid,jdbcType=INTEGER},
      </if>
      <if test="eusername != null" >
        eusername = #{eusername,jdbcType=VARCHAR},
      </if>
      <if test="epassword != null" >
        epassword = #{epassword,jdbcType=VARCHAR},
      </if>
      <if test="esex != null" >
        esex = #{esex,jdbcType=INTEGER},
      </if>
      <if test="ephone != null" >
        ephone = #{ephone,jdbcType=VARCHAR},
      </if>
      <if test="estate != null" >
        estate = #{estate,jdbcType=INTEGER},
      </if>
      <if test="deptid != null" >
        deptid = #{deptid,jdbcType=INTEGER},
      </if>
      <if test="salary != null" >
        salary = #{salary,jdbcType=VARCHAR},
      </if>
    </set>
    where eid = #{eid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wjw.meal.Pojo.Employee" >
    update re_employee
    set ename = #{ename,jdbcType=VARCHAR},
      eroleid = #{eroleid,jdbcType=INTEGER},
      eusername = #{eusername,jdbcType=VARCHAR},
      epassword = #{epassword,jdbcType=VARCHAR},
      esex = #{esex,jdbcType=INTEGER},
      ephone = #{ephone,jdbcType=VARCHAR},
      estate = #{estate,jdbcType=INTEGER},
      deptid = #{deptid,jdbcType=INTEGER},
      salary = #{salary,jdbcType=VARCHAR}
    where eid = #{eid,jdbcType=VARCHAR}
  </update>
</mapper>